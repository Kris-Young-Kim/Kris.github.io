---
alwaysApply: true
---
# 블로그 글 자동 생성 규칙

이 규칙은 사용자가 주제를 입력하면 자동으로 블로그 글을 생성하는 기능을 제공합니다.

## 사용법

사용자가 다음과 같이 요청할 때 이 규칙이 적용됩니다:

- "블로그 글 작성해줘"
- "주제: [주제명]으로 블로그 글 써줘"
- "새 글 작성: [주제명]"

## 작업 순서

### 1단계: 주제 분석 및 Tavily MCP 웹 검색

- 사용자가 제공한 주제를 분석합니다
- **반드시 Tavily MCP를 사용하여** 해당 주제에 대한 최신 정보를 웹 검색으로 수집합니다
- Tavily 검색 결과를 바탕으로 블로그 글의 구조를 계획합니다
- 검색 결과의 링크와 참고 자료를 블로그 글에 포함시킵니다

### 2단계: Front Matter 생성

[pages/example.md](mdc:pages/example.md) 파일의 형식을 참고하여 다음 구조로 Front Matter를 생성합니다:

```markdown
---
title: "생성된 글 제목"
date: "YYYY-MM-DD" (현재 날짜)
tags: ["관련", "태그", "배열"]
category: "카테고리명"
description: "글에 대한 간단한 설명"
---
```

### 3단계: 마크다운 콘텐츠 작성

다음 구조로 블로그 글을 작성합니다:

1. **제목** (H1)
2. **소개** - 주제에 대한 간단한 소개
3. **주요 내용** - Tavily MCP 웹 검색 결과를 바탕으로 한 상세 내용
4. **실제 사례나 예시** (해당되는 경우)
5. **결론 및 요약**
6. **참고 자료** - Tavily MCP에서 얻은 링크들과 출처들

### 4단계: 파일 저장

- 파일명: `YYYY-MM-DD-주제명.md` 형식으로 생성
- 저장 위치: `pages/` 폴더
- 파일명에서 특수문자는 하이픈(-)으로 대체

## 작성 가이드라인

### 콘텐츠 품질

- **반드시 Tavily MCP를 사용하여** 웹 검색을 통해 최신 정보를 반영합니다
- Tavily 검색 결과의 신뢰할 수 있는 출처들을 블로그 글에 포함시킵니다
- 한국어로 자연스럽게 작성합니다
- 비개발자도 이해할 수 있도록 쉽게 설명합니다
- 핵심적인 부분에는 로그를 남깁니다 (사용자 요청사항)

### 마크다운 형식

- 제목은 적절한 레벨(H1, H2, H3)을 사용합니다
- 코드 블록은 언어를 명시합니다
- 링크는 의미있는 텍스트로 작성합니다
- 이모지를 적절히 사용하여 가독성을 높입니다

### 태그 및 카테고리

- 주제와 관련된 적절한 태그를 3-5개 생성합니다
- 카테고리는 주제의 성격에 맞게 분류합니다
- 태그는 한국어와 영어를 적절히 혼용합니다

## 예시

사용자 요청: "주제: React 18의 새로운 기능으로 블로그 글 써줘"

생성되는 파일: `pages/2025-01-29-react-18-새로운-기능.md`

````markdown
---
title: "React 18의 새로운 기능 완전 가이드"
date: "2025-01-29"
tags: ["React", "JavaScript", "프론트엔드", "웹개발"]
category: "Development"
description: "React 18의 주요 새로운 기능들을 자세히 살펴보고 실제 사용법을 알아봅니다."
---

# React 18의 새로운 기능 완전 가이드

React 18이 출시되면서 많은 새로운 기능들이 추가되었습니다...

## 주요 새로운 기능들

### 1. Concurrent Features

...

## 실제 사용 예시

```javascript
// 예시 코드
```
````

## 결론

React 18의 새로운 기능들은...

```

## 주의사항

- **반드시 Tavily MCP를 사용하여** 웹 검색을 통해 최신 정보를 확인합니다
- Tavily 검색 결과의 출처와 링크를 정확히 블로그 글에 포함시킵니다
- 중복된 파일명이 있는지 확인합니다
- 생성된 파일이 올바른 형식인지 검증합니다
- 사용자가 요청한 주제와 일치하는지 확인합니다
```

## Tavily MCP 사용 필수사항

### 검색 전략

- 주제와 관련된 다양한 키워드로 여러 번 검색합니다
- 최신 정보를 위해 `time_range` 파라미터를 적절히 설정합니다
- 신뢰할 수 있는 출처를 위해 `include_domains` 파라미터를 활용합니다
- 상세한 정보를 위해 `search_depth: "advanced"`를 사용합니다

### 검색 예시

```javascript
// 기본 검색
mcp_tavily -
  mcp_tavily -
  search({
    query: "주제명 최신 정보",
    max_results: 10,
    search_depth: "advanced",
  });

// 특정 기간 검색
mcp_tavily -
  mcp_tavily -
  search({
    query: "주제명",
    time_range: "month",
    max_results: 15,
  });

// 특정 도메인 검색
mcp_tavily -
  mcp_tavily -
  search({
    query: "주제명",
    include_domains: ["example.com", "trusted-source.com"],
  });
```

## 필수사항

블로그 글을 작성하고 나서 항상 `node .github/scripts/generate-posts.js`를 실행하여 posts.json 파일을 생성하세요.
